###############################################
# unix is your IDE so you better make it work #
###############################################

#0X01 - 'EDIT BASH' CONFIG MANAGMENT
#0X02 - 'RELOAD', 'DIFF', 'CD', 'SHOW ALIASES'
#0X03 - LS
#0X04 - SUDO
#0X05 - 'UTIL'
#0X06 - CAT / VI
#0X07 - NOTES AND KANBAN
#0X08 - 'SHOW'
#0X09 - NETWORK
#0X0A - CODE

#0xFA - SCRAPYARD





#############################################################################################################
#0X01 - 'EDIT BASH' CONFIG MANAGMENT
#############################################################################################################
# 'edit bash'
# "" = regular .bashrc, just needed for fixing includes and shit. all magic happens in the included files
# a  = aliases
# e  = environment
# g  = git
alias    eb="vim /home/sjas/.bashrc; 				. /home/sjas/.bashrc; echo [+] .bashrc reloaded"
alias   eba="vim $DOTFILES/roles/bash/files/.bashrc_aliases; 	. /home/sjas/.bashrc; echo [+] .bashrc reloaded"
alias  ebac="vim $DOTFILES/roles/bash/files/.bashrc_completion;	. /home/sjas/.bashrc; echo [+] .bashrc reloaded"
alias   ebe="vim $DOTFILES/roles/bash/files/.bashrc_env; 	. /home/sjas/.bashrc; echo [+] .bashrc reloaded"
alias   ebg="vim $DOTFILES/roles/bash/files/.bashrc_git; 	. /home/sjas/.bashrc; echo [+] .bashrc reloaded"
alias   ebi="vim /home/sjas/etc/.dotfiles/.bashrc_includes;     . /home/sjas/.bashrc; echo [+] .bashrc reloaded"
# v  = vim
# t  = terminator
# tm = tmux
# m  = mc
# p  = apt packages
# c  = vscode
# ce = vscode extensions
alias   ebv="vim $DOTFILES/roles/code/files/.vimrc; cp -va $DOTFILES/roles/code/files/.vimrc /home/sjas/.vimrc"
alias	ebt="vim $DOTFILES/roles/terminals/files/config; cp -va $DOTFILES/roles/terminals/files/config /home/sjas/.config/terminator/config"
alias  ebtm="vim /home/sjas/.tmux.conf; cp -va /home/sjas/.tmux.conf $DOTFILES/roles/terminals/files/.tmux.conf"
alias   ebm="vim $DOTFILES/roles/bash/files/ini; cp -va $DOTFILES/roles/bash/files/ini /home/sjas/.config/mc/ini"
alias   ebp="vim $DOTFILES/roles/common/tasks/0x02_packages.yml"
alias   ebc="vim /home/sjas/.config/Code/User/settings.json; cp -va /home/sjas/.config/Code/User/settings.json $DOTFILES/roles/code/files/settings.json"
alias  ebcp="vim $DOTFILES/roles/code/tasks/0x02_vscode.yml"
alias  ebck="vim /home/sjas/.config/Code/User/keybindings.json; cp -va /home/sjas/.config/Code/User/keybindings.json $DOTFILES/roles/code/files/keybindings.json"





#############################################################################################################
#0X02 - 'RELOAD', 'DIFF', 'CD', 'SHOW ALIASES'
#############################################################################################################
# 'reload'
alias   reb=". /home/sjas/.bashrc; echo [+] .bashrc reloaded"
rea() {
	(
		cd $DOTFILES
		ansible-playbook neon.yml $@
		date +%F_%T
	)
}

#'diff bash' aliases (easily find out what changed after changes in the applications took place)
alias   dbt="wdiff -n ~/etc/.ansible/roles/terminals/files/config ~/.config/terminator/config | colordiff"
alias	dbm="wdiff -n ~/etc/.ansible/roles/bash/files/mc_ini ~/.config/mc/ini | colordiff"
alias	dbc="wdiff -n  /home/sjas/etc/.ansible/roles/code/files/settings.json /home/sjas/.config/Code/User/settings.json | colordiff"

# 'change directory'
alias   cdd="cd $DOTFILES"			## dotfiles
alias  cddi="cd $DOTFILES/../.dotfiles"  	## dotfiles' includes
alias	cdt="cd /home/sjas/txt"
alias 	cds="cd /home/sjas/.ssh/controlmasters; ls -liash /home/sjas/.ssh/controlmasters"

# 'show aliases' (shows currently defined aliases)
# ba  = bash aliases
# ga  = git aliases
alias    sba="grep -e alias -e'()' $DOTFILES/roles/bash/files/.bashrc_aliases | grep -v ^# | sed 's/ {//g; s/alias\s\+//g' | sort | grep -e  ^.\*\(\) -e ^.\*= --color"
alias   sga="grep ^alias $DOTFILES/roles/bash/files/.bashrc_git | sed 's/alias //' | sort | grep -e ^.\*= --color"
 





#############################################################################################################
#0X03 - LS
#############################################################################################################
LS_OPT1='-h --color --time-style=long-iso'
LS_OPT2='-is'
#LS_OPT2=''
#files
alias    ls="ls $LS_OPT1"
alias     l="ls $LS_OPT1 -l $LS_OPT2"
alias    ll="ls $LS_OPT1 -l $LS_OPT2 -A"
alias    lt="ls $LS_OPT1 -l $LS_OPT2 -Atr"
alias    lS="ls $LS_OPT1 -l $LS_OPT2 -ASr"
alias    lr="find | sort | cut -c 3-"  ## so no additional package is needed
#directories
alias     d="ls $LS_OPT1 -l          -F  | grep ^d"
alias    dl="ls $LS_OPT1 -l          -AF | grep ^d"





#############################################################################################################
#0X04 - SUDO
#############################################################################################################
alias reboot="sudo reboot"
alias poweroff="sudo poweroff"

alias eer="sudo pcmanfm ."  ## dolphin wont let you sudo

alias htop="sudo htop -d2"
alias iotop="sudo iotop"
alias powertop="sudo powertop"

alias aptc="sudo apt clean; sudo apt autoremove"
alias apts="sudo dpkg -l | grep"

alias bettercap="sudo bettercap"

alias fw="sudo firewall-cmd"
alias iptables="sudo iptables"
fws() {
	iptables -L -vnx --line-numbers | \
		sed	"/^num.*/								s//$(printf "\033[33m&\033[0m")/		" | \
		\
		sed	"/ DROP/								s//$(printf "\033[31;1m&\033[0m")/		" | \
		sed	"/REJECT/								s//$(printf "\033[31;1m&\033[0m")/		" | \
		sed	"/reject-with.*/							s//$(printf "\033[31;1m&\033[0m")/		" | \
		sed	"/ACCEPT/								s//$(printf "\033[32;1m&\033[0m")/		" | \
		sed	"/RETURN/								s//$(printf "\033[33;1m&\033[0m")/		" | \
		\
		sed	"/FORWARD\w*/								s//$(printf "\033[34;1m&\033[0m")/		" | \
		sed	"/FWD\w*/								s//$(printf "\033[34;1m&\033[0m")/		" | \
		sed	"/IN\w*/								s//$(printf "\033[34;1m&\033[0m")/		" | \
		sed	"/OUT\w*/								s//$(printf "\033[34;1m&\033[0m")/		" | \
		sed	"/f2b-sshd/								s//$(printf "\033[34;1m&\033[0m")/		" | \
		\
		sed	"/INVALID/ 								s//$(printf "\033[31;1m&\033[0m")/		" | \
		sed	"/RELATED/ 								s//$(printf "\033[32;1m&\033[0m")/		" | \
		sed	"/ESTABLISHED/								s//$(printf "\033[32;1m&\033[0m")/		" | \
		sed	"/NEW/									s//$(printf "\033[33;1m&\033[0m")/		" | \
		sed	"/UNTRACKED/								s//$(printf "\033[33;1m&\033[0m")/		" | \
		\
		sed 	"/Chain[[:space:]][[:graph:]]*/						s//$(printf "\033[34;1m&\033[0m")/	 	" | \
		\
		sed   	"/\([ds]pt[s]\?:\)\([[:digit:]]\+\(:[[:digit:]]\+\)\?\)/		s//$(printf "\\\1\033[33;1m\\\2\033[0m")/	" | \
		sed   	"/\([ds]ports\? \)\([[:digit:]]\+\(:[[:digit:]]\+\)\?\)/			s//$(printf "\\\1\033[33;1m\\\2\033[0m")/	" | \
		sed   	"/\([0-9]\{1,3\}\\.\)\{3\}[0-9]\{1,3\}\(\\/\([0-9]\)\{1,3\}\)\{0,1\}/	s//$(printf "\033[37;1m&\033[0m")/g      	" | \
		sed   	"/\([^n][[:space:]]\)\(LOGDROP\)/					s//$(printf "\\\1\033[1;33m\\\2\033[0m")/	" | \
		\
		sed   	"/[[:space:]]LOG[[:space:]]/						s//$(printf "\033[36;1m&\033[0m")/       	"
}




#############################################################################################################
#0x05 - 'UTIL'
#############################################################################################################
alias ..="cd .."
alias mkcd="pushd $(mktemp -d)"
alias o="popd"
alias p="pushd"
alias v="vim"
alias w="watch -n1 -d --color"
alias cf='tail -n +1 $(find . -maxdepth 1 -type f) | grep --color -e $ -e ^==.\*'

alias apt-list-backports="aptitude search -t $(lsb_release -sc)-backports -F '%p %v -> %V' '~U ~Abackports'"
alias apt-list-changelog="apt-get changelog -t $(lsb_release -sc)-backports"

#v4test
#for i in 0 $(ip -4 r | grep default | awk '{print $3}' | head -1) 1.1 one.one.one.one; do if ping -4 -c1 -W1 $i &>/dev/null; then echo -n $'\e[32;1m'; else echo -n $'\e[31;1m'; fi; echo $i$'\e[0m'; done
#
#v6test
#for i in :: $(ip -6 r | grep default | awk '{print $3}' | head -1) 2606:4700:4700::1001 one.one.one.one; do if ping -6 -c1 -W1 $i &>/dev/null; then echo -n $'\e[32;1m'; else echo -n $'\e[31;1m'; fi; echo $i$'\e[0m'; done

vm() { man $1 | col -b | vim -MR --not-a-term -c "set ft=man nomod nolist hls is" -; }
cm() { PAGER=cat man $1 | grep ^\\w | grep -v -e AUTHORS -e COPYRIGHT | sed '1d;$d'; }
m() {
        dpkg -s dialog &>/dev/null || { echo "Needs 'dialog' package which is not installed on this system!" && return; }
        [[ $# -lt 1 ]] && echo 'Man page name consisting of a single word expected but not given.' && return
        MANPAGE=$1
        [[ -n $2 ]] && DEFAULTCHOICE=$2 || DEFAULTCHOICE='0'
        man $MANPAGE > /dev/null 2>&1 || { echo $MANPAGE man page not present on this system!; return; }
        mapfile -t OUTLINE < <(PAGER=cat man $MANPAGE | grep ^\\w | grep -v -e AUTHORS -e COPYRIGHT | sed '1d;$d')
        RESULTSIZE=$(echo ${#OUTLINE[*]})
        CHOICE=$(
                dialog --colors --keep-tite --default-item "$DEFAULTCHOICE" --menu "$(
                        echo -n \\Zb\\Z3 $MANPAGE | tr '[a-z]' '[A-Z]'
                ) man page" $(( $RESULTSIZE + 8 )) 55 $RESULTSIZE $(
                        COUNT=0
                        for i in $( seq 0 $(( ${#OUTLINE[@]} - 1 )) )
                        do
                                echo -n $COUNT
                                echo -n " $( echo "${OUTLINE[i]}" | sed 's/ /\_/g' ) " 
                                (( COUNT++ ))
                        done
                ) 2>&1 >/dev/tty || echo CANCEL
        )
        [[ $CHOICE =~ "CANCEL" ]] && return
        MANPAGER="less +/^$( echo ${OUTLINE[$CHOICE]} | sed 's/ /\\ /g' )" man $MANPAGE
        m $MANPAGE $CHOICE
}

alias logoff="qdbus org.kde.ksmserver /KSMServer logout 0 3 3"
#alias logoff="loginctl terminate-user sjas"  ## deprecated

alias rg="rg --hidden -i"
alias mc=". /usr/share/mc/bin/mc-wrapper.sh"
tw () { tweep -u sjashc -s "$1" | grep -i -e "^\d+" -e "$1"; }
alias gg=global

alias ee="dolphin ."
alias ssha='eval $(ssh-agent) && ssh-add'
alias pipestatus='echo ${PIPESTATUS[@]}'

alias r="tr 'A-Za-z0-9' 'N-ZA-Mn-za-m5-90-4'"

alias nload='nload -u m -U H -i 102400 -o 102400 -a 60'  ## 100m graphs
alias nload1g='nload -u m -U H -i 1024000 -o 1024000 -a 60'  ## 1g graphs

alias topcommands="history | awk '{CMD[\$2]++;count++;} END { for (i in CMD)print CMD[i] \" \" CMD[i]/count*100 \"% \" i;}' | grep -v \"./\" | column -c3 -s\" \" -t | sort -nr | head -20 | nl"
alias kdeversion="dpkg -l | grep plasma-desktop\ | awk '{print $3}' | cut -d':' -f2 | cut -d'-' -f1"
alias ansibletags="( cd /home/sjas/etc/.ansible; rg -e '^\s+tags:' --no-filename --no-line-number | sort | uniq | awk 'NR>1' )"

fdiff() {
	wdiff -n $1 $2 | colordiff
}
x2d() {
	printf "%d\n" $1
}

#OPENSSL
alias oxk='openssl rsa -noout -text -in'
alias oxr='openssl req -noout -text -in'
alias oxc='openssl x509 -noout -text -in'

#XCLIP like pb{copy,paste} on osx
alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -selection clipboard -o'




#############################################################################################################
#0x06 - 'CAT' AND 'VI'
#############################################################################################################

#VI
# hosts		= /etc/hosts
# ssh		= ~/.ssh/config
# if		= /etc/network/interfaces
alias vihosts="sudo vim /etc/hosts"
alias vissh="vim /home/sjas/.ssh/config"
alias viif="sudo vim /etc/network/interfaces"
#CAT
# hosts		= /etc/hosts
# ssh		= ~/.ssh/config
# pub		= id_rsa.pub
# sh		= current shell type
# ip		= get upstream ip
# attr		= list ext4 extended attributes and supported kernel versions
# keys		= list bash shortcuts
# fonts		= list system font names
alias cathosts="cat /etc/hosts"
alias catssh="cat /home/sjas/.ssh/config"
alias catpub="cat /home/sjas/.ssh/id_rsa.pub"
alias catsh="ps -p $$ |& tail -1 | awk '{ print \$4 }'"
alias catip="curl -s telnetmyip.com| jq -r '.ip'"
alias catattr="PAGER=cat man ext4 | sed -n '/^FILE ATTRIBUTES/,/SEE ALSO/p' | grep -v SEE\ ALSO | awk 'NF>0"
alias catkeys="PAGER=cat man bash | grep '([CM]-\|ESC' | grep ')$' --color=none | sort -nk1,1 | grep -v 'meta\ key' | sed 's/ /|/g; s/^|\+//; s/|(/ (/' | column -t | sed 's/|/ /g; s/^/        /; s/(//; s/)$//'"
alias catfonts="fc-list | awk '{\$1=\"\"}1' | cut -d: -f1 | sort| uniq"





#############################################################################################################
#0x07 - NOTES AND KANBAN
#############################################################################################################
# FIXME: most of these need to be thrown out
alias    et="vim ~/.todo2"
alias   ett="vim ~/.todo"
alias   eta="vim ~/.todo_agenda"
alias   etp="vim ~/.todo_prv"
alias  etpi="vim ~/.todo_install"
alias   ets="vim ~/.todo_srv"

# the commented out lines where for syncing these with upstream, syncthing will make these obsolete eventually
k() {
	#if ping -c1 -W1 prv &>/dev/null; then rsync -auq prv:/home/sjas/.kanban/ /home/sjas/.kanban; fi
	kanban $@
	#if ping -c1 -W1 prv &>/dev/null; then rsync -aq /home/sjas/.kanban/ prv:/home/sjas/.kanban; fi
}
n() {
	[[ $# == 0 ]] && echo && ls -c1 /home/sjas/txt | sort && echo && return
	#if ping -c1 -W1 prv &>/dev/null; then rsync -auq prv:/home/sjas/txt/ /home/sjas/txt; fi
	vim /home/sjas/txt/$@
	#if ping -c1 -W1 prv &>/dev/null; then rsync -aq /home/sjas/txt/ prv:/home/sjas/txt; fi
}
cn() {
	[[ $# == 0 ]] && echo && ls -c1 /home/sjas/txt && echo && return
	cat /home/sjas/txt/$@
}





#############################################################################################################
#0x08 - 'SHOW'
#############################################################################################################
# apt
# net
# net4
# net6
# ru
# r
# du
# df
showapt() {
	watch -n 1 -d 'ps auxww | grep -e apt -e dpkg | grep -v grep | cut -c 66-' 
}
shownet() {
	watch -n 1 -d 'ip -s -d l; echo; echo =================================================================; echo; cat /etc/resolv.conf; echo; ip -d r; echo; ip -d a; echo; ps aux | grep openvpn | grep -v -e sudo -e grep'
}
shownet4() {
	watch -n 1 -d 'cat /etc/resolv.conf; echo; ip -d -4 r; echo; ip -s -d -4 a | grep -v lft; echo; ps aux | grep openvpn | grep -v -e sudo -e grep'
}
shownet6() {
	watch -n 1 -d 'cat /etc/resolv.conf; echo; ip -d -6 r; echo; ip -d -6 a; echo; ps aux | grep openvpn | grep -v -e sudo -e grep'
}
showru() {
	echo; ip ru; echo; for i in $(ip ru | awk '{print $1}' | tr -d ':'); do echo; echo $'\e[33;1m'"$i "$(ip ru | grep -e "^$i:" | awk '{print $NF}'); echo ================$'\e[0m'; ip -d r l t $i | sed 's/\(default\)\s\+\(via\)\s\+/\1_\2_/g' | column -t | sort -k1; done | sed 's/default_via_/default via /'
}
showr() {
	( echo DST GW DEV PROTO SCOPE SRC METRIC; while read j; do if ! echo $j | grep -q src; then echo $j | sed 's/metric/ . . &/'; else echo $j; fi; done < <(while read i; do if ! echo $i | grep -q via ; then echo $i | sed 's/dev/ . . dev/'; else echo $i; fi; done  < <(ip -d r)) | awk '{print $2" "$4" "$6" "$8" "$10" "$12" "$14}' ) | column -t | sed 's/\(\s\)\.\(\s\)/\1 \2/g'
}
showdu() {
	du -sh * | sort -hk1
}
showdf() {
	watch -n 1 -d 'df -h'
}





#############################################################################################################
#0x09 - NETWORK
#############################################################################################################
# FIXME: here is quite some shit to finish
# fix up missing radb / cymru functions
# make the existing ones take parameters
# build in a security prompt for the route aliases asking wether the queried ASN is the right one
getip() {
	dig $1 +short | xclip && echo $(xclip -o)
}
rdns() {
	dig -x $(dig $1 +short) +short
}
cymru() {
	echo enter ip/ASN for whois.cymru.com query
	echo
	echo -n 'cymru> '

	while
	read i
	do
		whois -h whois.cymru.com $i | tail -1 | awk '{$2=$3=$4=""; print $0}'
		echo
		echo -n 'cymru> '
	done
}
radb() {
	echo enter ip/ASN for whois.radb.net query
	echo
	echo -n 'radb> '

	while
	read i
	do
		whois -h whois.radb.net $i | head -4
		echo
		echo -n 'radb> '

	done
}
radb-routes() {
	whois -h whois.radb.net -- "-i origin $(whois -h whois.cymru.com $(host $1 | grep address | awk '{print $NF}' | head -1) | tail -1 | awk '{$2=$3=$4=""; print $0}' | cut -d' ' -f1)" | grep ^route
}
geoip() {
	# needs package 'geoip-bin'
	echo enter ip to geoiplookup query
	echo
	echo -n 'geoip> '

	while 
	read i
	do
		geoiplookup $i | sed -e 's/GeoIP Country Edition: //'
		echo
		echo -n 'geoip> '
	done
}
utrace() {
# since bash4 associative arrays exist!
	if [ $SHELL = '/bin/bash' ]
	then
		typeset -A temparray
		typeset -A countrycodes=( ["AD"]="Andorra" ["AE"]="United Arab Emirates" ["AF"]="Afghanistan" ["AG"]="Antigua and Barbuda" ["AI"]="Anguilla" ["AL"]="Albania" ["AM"]="Armenia" ["AN"]="Netherlands Antilles" ["AO"]="Angola" ["AQ"]="Antarctica" ["AR"]="Argentina" ["AS"]="American Samoa" ["AT"]="Austria" ["AU"]="Australia" ["AW"]="Aruba" ["AZ"]="Azerbaijan" ["BA"]="Bosnia and Herzegovina" ["BB"]="Barbados" ["BD"]="Bangladesh" ["BE"]="Belgium" ["BF"]="Burkina Faso" ["BG"]="Bulgaria" ["BH"]="Bahrain" ["BI"]="Burundi" ["BJ"]="Benin" ["BM"]="Bermuda" ["BN"]="Brunei Darussalam" ["BO"]="Bolivia" ["BR"]="Brazil" ["BS"]="Bahamas" ["BT"]="Bhutan" ["BV"]="Bouvet Island" ["BW"]="Botswana" ["BY"]="Belarus" ["BZ"]="Belize" ["CA"]="Canada" ["CC"]="Cocos (Keeling) Islands" ["CF"]="Central African Republic" ["CG"]="Congo" ["CH"]="Switzerland" ["CI"]="Cote D'Ivoire (Ivory Coast)" ["CK"]="Cook Islands" ["CL"]="Chile" ["CM"]="Cameroon" ["CN"]="China" ["CO"]="Colombia" ["CR"]="Costa Rica" ["CS"]="Czechoslovakia (former)" ["CU"]="Cuba" ["CV"]="Cape Verde" ["CX"]="Christmas Island" ["CY"]="Cyprus" ["CZ"]="Czech Republic" ["DE"]="Germany" ["DJ"]="Djibouti" ["DK"]="Denmark" ["DM"]="Dominica" ["DO"]="Dominican Republic" ["DZ"]="Algeria" ["EC"]="Ecuador" ["EE"]="Estonia" ["EG"]="Egypt" ["EH"]="Western Sahara" ["ER"]="Eritrea" ["ES"]="Spain" ["ET"]="Ethiopia" ["FI"]="Finland" ["FJ"]="Fiji" ["FK"]="Falkland Islands (Malvinas)" ["FM"]="Micronesia" ["FO"]="Faroe Islands" ["FR"]="France" ["FX"]="France, Metropolitan" ["GA"]="Gabon" ["GB"]="Great Britain (UK)" ["GD"]="Grenada" ["GE"]="Georgia" ["GF"]="French Guiana" ["GH"]="Ghana" ["GI"]="Gibraltar" ["GL"]="Greenland" ["GM"]="Gambia" ["GN"]="Guinea" ["GP"]="Guadeloupe" ["GQ"]="Equatorial Guinea" ["GR"]="Greece" ["GS"]="S. Georgia and S. Sandwich Isls." ["GT"]="Guatemala" ["GU"]="Guam" ["GW"]="Guinea-Bissau" ["GY"]="Guyana" ["HK"]="Hong Kong" ["HM"]="Heard and McDonald Islands" ["HN"]="Honduras" ["HR"]="Croatia (Hrvatska)" ["HT"]="Haiti" ["HU"]="Hungary" ["ID"]="Indonesia" ["IE"]="Ireland" ["IL"]="Israel" ["IN"]="India" ["IO"]="British Indian Ocean Territory" ["IQ"]="Iraq" ["IR"]="Iran" ["IS"]="Iceland" ["IT"]="Italy" ["JM"]="Jamaica" ["JO"]="Jordan" ["JP"]="Japan" ["KE"]="Kenya" ["KG"]="Kyrgyzstan" ["KH"]="Cambodia" ["KI"]="Kiribati" ["KM"]="Comoros" ["KN"]="Saint Kitts and Nevis" ["KP"]="Korea (North)" ["KR"]="Korea (South)" ["KW"]="Kuwait" ["KY"]="Cayman Islands" ["KZ"]="Kazakhstan" ["LA"]="Laos" ["LB"]="Lebanon" ["LC"]="Saint Lucia" ["LI"]="Liechtenstein" ["LK"]="Sri Lanka" ["LR"]="Liberia" ["LS"]="Lesotho" ["LT"]="Lithuania" ["LU"]="Luxembourg" ["LV"]="Latvia" ["LY"]="Libya" ["MA"]="Morocco" ["MC"]="Monaco" ["MD"]="Moldova" ["MG"]="Madagascar" ["MH"]="Marshall Islands" ["MK"]="Macedonia" ["ML"]="Mali" ["MM"]="Myanmar" ["MN"]="Mongolia" ["MO"]="Macau" ["MP"]="Northern Mariana Islands" ["MQ"]="Martinique" ["MR"]="Mauritania" ["MS"]="Montserrat" ["MT"]="Malta" ["MU"]="Mauritius" ["MV"]="Maldives" ["MW"]="Malawi" ["MX"]="Mexico" ["MY"]="Malaysia" ["MZ"]="Mozambique" ["NA"]="Namibia" ["NC"]="New Caledonia" ["NE"]="Niger" ["NF"]="Norfolk Island" ["NG"]="Nigeria" ["NI"]="Nicaragua" ["NL"]="Netherlands" ["NO"]="Norway" ["NP"]="Nepal" ["NR"]="Nauru" ["NT"]="Neutral Zone" ["NU"]="Niue" ["NZ"]="New Zealand (Aotearoa)" ["OM"]="Oman" ["PA"]="Panama" ["PE"]="Peru" ["PF"]="French Polynesia" ["PG"]="Papua New Guinea" ["PH"]="Philippines" ["PK"]="Pakistan" ["PL"]="Poland" ["PM"]="St. Pierre and Miquelon" ["PN"]="Pitcairn" ["PR"]="Puerto Rico" ["PT"]="Portugal" ["PW"]="Palau" ["PY"]="Paraguay" ["QA"]="Qatar" ["RE"]="Reunion" ["RO"]="Romania" ["RU"]="Russia" ["RW"]="Rwanda" ["SA"]="Saudi Arabia" ["Sb"]="Solomon Islands" ["SC"]="Seychelles" ["SD"]="Sudan" ["SE"]="Sweden" ["SG"]="Singapore" ["SH"]="St. Helena" ["SI"]="Slovenia" ["SJ"]="Svalbard and Jan Mayen Islands" ["SK"]="Slovak Republic" ["SL"]="Sierra Leone" ["SM"]="San Marino" ["SN"]="Senegal" ["SO"]="Somalia" ["SR"]="Suriname" ["ST"]="Sao Tome and Principe" ["SU"]="USSR (former)" ["SV"]="El Salvador" ["SY"]="Syria" ["SZ"]="Swaziland" ["TC"]="Turks and Caicos Islands" ["TD"]="Chad" ["TF"]="French Southern Territories" ["TG"]="Togo" ["TH"]="Thailand" ["TJ"]="Tajikistan" ["TK"]="Tokelau" ["TM"]="Turkmenistan" ["TN"]="Tunisia" ["TO"]="Tonga" ["TP"]="East Timor" ["TR"]="Turkey" ["TT"]="Trinidad and Tobago" ["TV"]="Tuvalu" ["TW"]="Taiwan" ["TZ"]="Tanzania" ["UA"]="Ukraine" ["UG"]="Uganda" ["UK"]="United Kingdom" ["UM"]="US Minor Outlying Islands" ["US"]="United States" ["UY"]="Uruguay" ["UZ"]="Uzbekistan" ["VA"]="Vatican City State (Holy See)" ["VC"]="Saint Vincent and the Grenadines" ["VE"]="Venezuela" ["VG"]="Virgin Islands (British)" ["VI"]="Virgin Islands (U.S.)" ["VN"]="Viet Nam" ["VU"]="Vanuatu" ["WF"]="Wallis and Futuna Islands" ["WS"]="Samoa" ["YE"]="Yemen" ["YT"]="Mayotte" ["YU"]="Yugoslavia" ["ZA"]="South Africa" ["ZM"]="Zambia" ["ZR"]="Zaire" ["ZW"]="Zimbabwe" ["COM"]="US Commercial" ["EDU"]="US Educational" ["GOV"]="US Government" ["INT"]="International" ["MIL"]="US Military" ["NET"]="Network" ["ORG"]="Non-Profit Organization" ["ARPA"]="Arpanet" ["NATO"]="Nato field")
	else
		echo '[-] need a bash v4 shell to run'
	fi

	echo "enter ip for whois country lookup"
	echo
	echo -en "utrace> "

	while 
	read i
	do
		temparray=$( whois $i | \grep -i country | cut -d':' -f2 | sed -e 's/ //g')

		for j 
		in $temparray
		do
			echo -e "\e[33;1m$j \e[0m${countrycodes[$j]}"
		done
		echo
		echo -en "utrace> "
	done
}





#############################################################################################################
#0x0A - CODE
#############################################################################################################
god() {
	[[ $# != 1 ]] && echo 'can only take a single argument'
	firefox --new-tab https://golang.org/pkg/$1

}
godc() {
	[[ $# != 1 ]] && echo 'can only take a single argument'
	firefox --new-tab https://godoc.org/?q=$1
}
runonchange() {
	[[ $# == 0 ]] && \
		echo && \
		echo "USAGE:" && \
		echo "    ${FUNCNAME[0]} FILE_TO_WATCH bash_script_or_code_to_run_when_FILE_TO_WATCH_is_saved" && \
		return
	FILE=$1
	shift
	echo "["$'\e[37;1m'"+"$'\e[0m'"] setting up..."
	echo
	while inotifywait -e close_write $FILE 2>/dev/null
	do
		eval $* \
		&& echo && \
		echo "["$'\e[32;1m'"+"$'\e[0m'"] code/script was ran." || \
		echo "["$'\e[31;1m'"-"$'\e[0m'"] code/script did not run."
		echo
	done
}
### this exits prior to running `dot` on the saved file and i have no clue why
#rundotpreview() {
#	[[ $# != 1 ]] && \
#		echo && \
#		echo "USAGE:" && \
#		echo "    ${FUNCNAME[0]} FILE.dot" && \
#		return
#	FORMAT=svg
#	DOTFILE=$1
#	IMGFILE=${DOTFILE%.dot}.$FORMAT
#	[[ -f $IMGFILE ]] || dot -T$FORMAT -o $IMGFILE $DOTFILE
#	firefox $IMGFILE
#	echo "["$'\e[37;1m'"+"$'\e[0m'"] inital setup done."
#	echo
#	while 
#		inotifywait -e close_write $DOTFILE #2>/dev/null
#	do
#		date && \
#		dot -T$FORMAT -o $IMGFILE $DOTFILE && \
#		echo "["$'\e[32;1m'"+"$'\e[0m'"] PNG generated." || \
#		echo "["$'\e[31;1m'"-"$'\e[0m'"] PNG could not be generated."
#		echo
#	done
#}

rundotpreview(){
	[[ $# == 0 ]] && \
		echo && \
		echo "USAGE:" && \
		echo "    ${FUNCNAME[0]} FILE.dot" && \
		return
	FORMAT=png
	DOTFILE=$1
	IMGFILE=${DOTFILE%.dot}.$FORMAT
	while :
	do
		dot -T$FORMAT -o $IMGFILE $DOTFILE
		okular $IMGFILE
	done
}




#############################################################################################################
#0xFA - SCRAPYARD
#############################################################################################################
#bc() {
#	while :
#	do
#		while IFS='$\n' read i
#		do
#			/usr/bin/bc <<< "scale=2; $i" | sed 's/^\./0&/'
#		done
#	done
#}

#TMUX
tmw() {
	tmux split-window -dh "$*"
}
tmwh() {
	tmux split-window -dv "$*"
}

getdiff() {
	sdiff -ds <(sudo cat $1) <(sudo cat $2) | colordiff
}
cmddiff() {
	[ ! $# -gt 1 ] && echo USAGE: cmddiff CMD PARAM \[ALT_PARAM\] && return
	CMD=$1
	PARAM=$2
	ALT_PARAM=${3:- }
	sdiff <(sudo $CMD $PARAM) <(sudo $CMD $ALT_PARAM) | colordiff
}
sshdiff() {
	[ ! $# -eq 3 ] && echo USAGE: sshdiff HOST1 HOST2 'CMD' && return
	HOST1=$1
	HOST2=$2
	CMD=$3
	sdiff -ds <(ssh $HOST1 $CMD) <(ssh $HOST2 $CMD) | colordiff
}

rpmextract() {
	rpm2cpio $1 | cpio -idmv
}

